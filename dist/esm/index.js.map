{"version":3,"file":"index.js","sources":["../../src/constants.js","../../src/createFullQuery.js","../../src/getGoogleFontsUrl.js","../../src/getGoogleFontsUrlSimple.js"],"sourcesContent":["export const GOOGLE_FONT_API_URI = 'https://fonts.googleapis.com/css2?'\n\nexport const AXIS_NAME_MAPPING = {\n    italic: 'ital',\n    opticalSize: 'opsz',\n    slant: 'slnt',\n    weight: 'wght',\n    width: 'wdth',\n    ascenderHeight: 'YTAS',\n    casual: 'CASL',\n    counter_width: 'XTRA',\n    cursive: 'CRSV',\n    descenderDepth: 'YTDE',\n    figureHeight: 'YTFI',\n    fill: 'FILL',\n    grade: 'GRAD',\n    lowercaseHeight: 'YTLC',\n    monospace: 'MONO',\n    softness: 'SOFT',\n    thickStroke: 'XOPQ',\n    thinStroke: 'YOPQ',\n    uppercaseHeight: 'YTUC',\n    wonky: 'WONK',\n    ital: 'ital',\n    opsz: 'opsz',\n    slnt: 'slnt',\n    wght: 'wght',\n    wdth: 'wdth',\n    YTAS: 'YTAS',\n    CASL: 'CASL',\n    XTRA: 'XTRA',\n    CRSV: 'CRSV',\n    YTDE: 'YTDE',\n    YTFI: 'YTFI',\n    FILL: 'FILL',\n    GRAD: 'GRAD',\n    YTLC: 'YTLC',\n    MONO: 'MONO',\n    SOFT: 'SOFT',\n    XOPQ: 'XOPQ',\n    YOPQ: 'YOPQ',\n    YTUC: 'YTUC',\n    WONK: 'WONK'\n}\n\nexport const ALPHABET_ORDER = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\nexport const WEIGHT_NAME_MAPPING = {\n    thin: 100,\n    extralight: 200,\n    light: 300,\n    regular: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n    black: 900,\n  }\n  \nexport const WIDTH_NAME_MAPPING = {\n    supercondensed: 25,\n    ultracondensed: 50,\n    extracondensed: 62.5,\n    condensed: 75,\n    semicondensed: 87.5,\n    normal: 100,\n    semiexpanded: 112.5,\n    expanded: 125,\n    extraexpanded: 150,\n  }","import { ALPHABET_ORDER, AXIS_NAME_MAPPING } from \"./constants.js\";\n\n// https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100;200;300&display=auto\n// https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100&family=Roboto+Mono:wght@300&family=Roboto+Mono:wght@200&display=auto\n// These two URLs request the same file, but in the second we don't need to sort the tuples (100;200;300), only the axis names.\n// Because of that, it requires less loops and processing to create the second URL, even tough it is lengthier.\n// So this is the only strategy in this library for now.\n\n\n// Tried to keep iterarion of arrays and objects to a minimum while maintaining code readability.\n\nconst createFullQuery = ({ family, styles }) => {\n  const encodedFamilyName = family.replaceAll(\" \", \"+\");\n\n  let sortedStyles = styles.map((styleObject) => { \n    \n    for (let key in styleObject) {\n      let googleAxisKey = AXIS_NAME_MAPPING[key]\n      if (!googleAxisKey) throw new Error(`The directive axis (${key}) is not on Google Fonts axis list (weight, wgth, ital...)`)\n      if (googleAxisKey !== key) delete Object.assign(styleObject, {[googleAxisKey]: styleObject[key] })[key];      \n    }\n\n    return Object.entries(styleObject).sort((pair1, pair2) => sorter(pair1[0], pair2[0])) //Sort by axis alphabetically\n  })\n  let familyString = \"\"\n\n  sortedStyles.forEach((styleAxis, i) => {\n    familyString += (i === 0 ? '' : '&') + 'family=' + encodedFamilyName + ':'\n\n    let axisString = ''\n    let valuesString = ''\n\n    styleAxis.forEach((axis, i) => {\n      let separator = styleAxis.length === i+1 ? '' : ','\n      axisString += axis[0] + separator\n      valuesString += (Array.isArray(axis[1]) ?  axis[1].join('..') : axis[1])  + separator\n    })\n\n    familyString += axisString + '@' + valuesString\n  })\n\n  return familyString\n}\n\nlet sorter = (str1, str2) => {\n  if (str1 === str2) throw new Error(`Styles Object key are not unique: ${str1}`)\n\n  // Sort by axis name\n  let position = (ALPHABET_ORDER.indexOf(str1[0]) - ALPHABET_ORDER.indexOf(str2[0]))\n  return position === 0 ? sorter(str1.substr(1), str2.substr(1)) : position\n}\n\nexport default createFullQuery","import { GOOGLE_FONT_API_URI } from \"./constants.js\";\nimport createFullQuery from \"./createFullQuery.js\";\n\n/**\n * @typedef {object} Style\n * @property {string} weight - weight of the font\n */\n/**\n * @typedef {object} familyStyle\n * @property {string} family - The family name.\n * @property {Style[]} styles - array of styles.\n */\n/**\n * @param {familyStyle[]} families \n * - Required. \n * - Array of families, and the styles to request.\n * \n * **Example:**\n * ```[{family: 'Lato', styles: [{weight: 600}]}]```\n * For a complete explanation visit: https://github.com/adriano-tirloni/google-fonts-css2\n * \n * **Detailed Description:**\n * **families:**\n * \n * ```[familyStyle, [familyStyle...]]```\n * \n * **familyStyle:**\n * \n * ```{ family: \"Roboto Flex\", styles: [style, [...style]]}```\n * \n * **style:**\n * \n * ```{ weight: 300, italic: 1, width: [25, 100]}```\n * \n * @param {'auto' | 'block' | 'swap' | 'fallback' | 'optional'} [display=auto] \n * - Optional. Defaults to ```auto```. \n * - Display strategy (https://www.w3.org/TR/css-fonts-4/#font-display-desc)\n * @param {string} [onlyThisCharacters] \n * - Optional.\n * - Creates the Google Fonts text parameter to request only included characters:\n * \n * ### Optimizing your font requests\n * Oftentimes, when you want to use a web font on your site or application, you know in advance which letters you'll need. This often occurs when you're using a web font in a logo or heading.\n * \n * In these cases, you should consider specifying a ```text=``` value in your font request URL. This allows Google Fonts to return a font file that's optimized for your request. In some cases, this can reduce the size of the font file by up to 90%.\n * \n * https://developers.google.com/fonts/docs/css2#optimizing_your_font_requests\n * @returns {string} - A Google Font CSS2 string (https://fonts.googleapis.com/css2?family=Lato:ital,wght@1,400&family=Roboto:wght@400&display=swap)\n */\nexport const getGoogleFontsUrl = (families, display='auto', onlyThisCharacters) => {\n    return GOOGLE_FONT_API_URI + createFamilies(families) + createDisplay(display) + createText(onlyThisCharacters)\n  }\n\nfunction createFamilies(families){\nreturn families.reduce((prev, familyStyles, i) => ( prev + (i?\"&\":\"\") + createFullQuery(familyStyles) ), \"\")\n}\n\nfunction createDisplay(display = 'auto') {\nreturn '&display=' + display\n}\n\nfunction createText(text = null) {\nif (!text) return \"\" \nreturn '&text=' + encodeURIComponent(text)\n}","import { WEIGHT_NAME_MAPPING, WIDTH_NAME_MAPPING } from \"./constants.js\";\nimport { getGoogleFontsUrl } from \"./getGoogleFontsUrl.js\"\n\n/**\n * \n * @param  {string | object} directives\n * Can receive any number of **directive strings or objects**, and an **options object**\n * ðŸ‘‡ (check examples below)\n * #### Options Object:\n * ```{display: 'string', onlyThisCharacters: 'string}```\n * *display: 'auto' (default) | 'block' | 'swap' | 'fallback' | 'optional'*\n * *onlyThisCharacters: optional or a string of characters*\n * #### String Directive:\n * A formatted string that will be parsed into most common styles: weight, italic, width.\n * Font Name is required, and case sensitive.\n * Weight is required.\n * Italic and Width are optional.\n * Follow this pattern:\n * ```Font Name,weight&weight,[italic,][width&width]```\n * \n * Examples:\n * ```Roboto Flex,bold,```\n */\nexport const getGoogleFontsUrlSimple = (...directives) => {\n  let stdParam = {families: [], display: undefined, onlyThisCharacters: undefined}\n\n  directives.forEach(arg => {\n    if (arg.display || arg.onlyThisCharacters){\n      //Options object\n      stdParam.display = arg.display\n      stdParam.onlyThisCharacters = arg.onlyThisCharacters\n    } else if (typeof arg === 'string') {\n      //Shortcut String \"FontNameCaseSensitive,weight_Named_Number_Range&weight_Named_Number_Range,[italic,width_Named_Number_Range];\"\n      //Examples:\n      //Lato,300&400,italic,25..50\n      //Lato,bold&semibold,italic,condensed&normal&125..150\n      //Lato,bold&semibold,condensed&normal&125..150\n      //Lato,bold&thin\n\n      let familyName = arg.slice(0, arg.indexOf(\",\"))\n      let others = arg.slice(arg.indexOf(\",\")+1).toLowerCase().replaceAll(\" \", \"\")\n      let [weights, ...italicAndWidthArray] = others.split(\",\")\n\n      let italicIndex = italicAndWidthArray ? italicAndWidthArray.indexOf(\"italic\") : -1\n      let italic = italicIndex >= 0\n      let widths = italicAndWidthArray.length ? italicAndWidthArray[italicIndex === 0 ? 1 : 0] : null\n\n      let familyStyles = {\n        family: familyName,\n        styles: []\n      }\n\n      weights.split(\"&\").forEach(weight => {\n        weight = sanitizeW(weight, WEIGHT_NAME_MAPPING)\n\n        if (widths){\n          widths.split(\"&\").forEach(width => {\n            width = sanitizeW(width,  WIDTH_NAME_MAPPING)\n  \n            let style = { weight, width }\n            if(italic) style.italic = 1;\n            familyStyles.styles.push(style)\n            \n          })\n        } else {\n          let style =  { weight }\n          if(italic) style.italic = 1;\n          familyStyles.styles.push(style)\n\n        }\n\n      })\n\n      stdParam.families.push(familyStyles)\n    } else if (typeof arg === 'object') {\n      stdParam.families.push(arg)\n    }\n  })\n\n  return getGoogleFontsUrl(stdParam.families, stdParam.display, stdParam.onlyThisCharacters)\n}\n\nfunction sanitizeW(weight_or_width, MAPPING) {\n  if (weight_or_width.includes(\"..\")) {\n    //Range\n    return weight_or_width.split(\"..\").map(n => Number(n))\n  } else if (isNaN(Number(weight_or_width))) {\n    //Named\n    let mapped = MAPPING[weight_or_width]\n    if(!mapped) throw new Error(`Invalid name for weight or width: ${weight_or_width}. You may have misplaced the argument order or separator.`)\n    return MAPPING[weight_or_width]\n  } else if (typeof Number(weight_or_width) === \"number\") {\n    //Number as string or not\n    return Number(weight_or_width)      \n  } else {\n    throw new Error(\"Could not convert font weight or width.\")\n  }\n}"],"names":[],"mappings":"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"}